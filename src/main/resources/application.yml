server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  devtools:
    restart:
      enabled: true
  application:
    name: user-service
  main:
    allow-circular-references: true

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/security?serverTimezone=Asia/Seoul
    username: cos
    password: cos1234

  mvc:
    view:
      prefix: /templates/
      suffix: .mustache

  jpa:
    hibernate:
      ddl-auto: update #create update none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true


  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 235958331288-94flvooairk132thc4o9jlrrf0hgmb8k.apps.googleusercontent.com
            clientSecret: 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
            scope:
              - email
              - profile
          facebook:
            client-id: 328179552730575
            clientSecret: 17b6be3f74cd0c05b823ae13adff97dc
            scope:
              - email
              - public_profile

          naver:
            client-id: yCqOxGbn_JgEUTTBZuCA
            clientSecret: jt0KGFl6v8
            scope:
              - name
              - email
            client-name: Naver
            authorization-grant-type: authorization_code #code를 부여받는 방식
            # oauth2를 사용할 때 여러가지 방식이 있는데 우리는 code를 부여받는 방식 AccessToken을 받아서 회원프로필 받기
            redirect-uri: http://localhost:8080/login/oauth2/code/naver #네이버는 설정이 되어있지 않기 때문에 적어줘야한다.

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # 회원정보를 json으로 받는데 response라는 키값으로 네이버가 리턴해줌.
            # 이 주소에 대한 원리는 네이버 개발 가이드에 설명이 있다.

